Tuples is also a collection data type
# Tuple: ordered, immutable,allows duplicate elements

Can not be changed after creation
Tuple syntax : tuple(iterable) or tuple()  # empty tuple

mytuple = "hello", "hi", "how", "are", "you"   # without parenthesis
print(type(mytuple))                               
mytuple = ("hello") // This will be a string

mytuple = ("hello", ) // So If there will be only one element in tuple then ypu have to add one comma after  element to recognize it as a tuple.

mytuple(["hello", "hi", "who"])

mytuple[-1]  // -1 refers to very last element

index()
count(element)
len(tup)
max(), min()
sum()
enumerate()
zip()

## Methods available in tuples ###

append()    -> Add an item at the end of the list.
extend()   -> Add multiple items at the end of the list.
insert()   -> Insert an item at any position of the list.
remove()   -> Remove an item from the list.
pop()      -> Remove and return the last item in the list.
del tup[0] -> Delete the first item in the list.
clear()     -> Empty out the entire list.
sort()     -> Sort the items in ascending order.
reverse()  -> Reverse the items in the list.
count()    -> Return the number of times an object appears in the list.
index()    -> Return the index of the first occurrence of an object.
find()     -> Search for an object in the list.
copy()     -> Create a copy of the original list.
+         -> Combine two lists (addition).
*         -> Multiply each item by a number.
in        -> Check if an item exists in the list.
not in    -> Check if an item does not exist in the list.

# Unpacking tuple
my_tuple = "raj", 26, 'bihar'
name, age, state = my_tuple
print(name) # Output: raj
print(age)  # Output: 26
print(state) # Output: bihar

my_tuple = (0, 1, 2, 3)
a, b, *c = my_tuple
print(a) # Output: 0
print(b) # Output: 1
print(c) # Output: [2, 3]


my_tuple = (0, 1, 2, 3)
a, *b, c = my_tuple
print(a) # Output: 0
print(b) # Output: [1, 2]
print(c) # Output: 3


import sys
my_list = [0, 1, 2 , "hello", True]
my_tuple = [0, 1, 2, "hello", True]

print(sys.getsizeof(my_list))     # Output: 104 bytes
print(sys.getsizeof(my_tuple))   # Output: 88 bytes


# Working with tuple is more efficient in comparision of list
import timeit
print(timeit.timeit(stmt="[0, 1, 2 , "hello", True]", number=1000000))
print(timeit.timeit(stmt="(0, 1, 2 , "hello", True)", number=1000000))


